name: Server Push CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Docker - Login
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin

    - name: Docker - Build (with tag)
      run: |
           docker build \
           --build-arg SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }} \
           --tag docker.pkg.github.com/shiryel/shiryel_blog/shiryel_blog:latest \
           .
    - name: Docker - Push
      run: docker push docker.pkg.github.com/shiryel/shiryel_blog/shiryel_blog:latest

    - name: AWS - Set PEM
      run: |
        echo "${{ secrets.AWS_PEM }}" > temp.pem
        chmod 400 temp.pem
    
    - name: AWS - Set Docker Login
      run: |
           ssh -q -o "StrictHostKeyChecking no" -i temp.pem ${{ secrets.AWS_SSH }} \
             "echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin"
    - name: AWS - Exclude last container if exists
      run: |
           ssh -q -o "StrictHostKeyChecking no" -i temp.pem ${{ secrets.AWS_SSH }} \
             docker rm -f shiryel_blog
    - name: AWS - Get and run new Image
      if: success() || failure()
      run: |
        ssh -o "StrictHostKeyChecking no" -i temp.pem ${{ secrets.AWS_SSH }} \
          docker pull docker.pkg.github.com/shiryel/shiryel_blog/shiryel_blog:latest
        ssh -o "StrictHostKeyChecking no" -i temp.pem ${{ secrets.AWS_SSH }} \
          docker run -d \
            --name shiryel_blog \
            --hostname shiryel_blog \
            --publish 5002:4000 \
            --restart=always \
            docker.pkg.github.com/shiryel/shiryel_blog/shiryel_blog:latest
    - name: AWS - Clear Docker Login
      if: always()
      run: |
           ssh -q -o "StrictHostKeyChecking no" -i temp.pem ${{ secrets.AWS_SSH }} \
             docker logout docker.pkg.github.com
    - name: AWS - Clear PEM
      if: always()
      run: rm -f temp.pem
